import streamlit as st
import pandas as pd
from pathlib import Path

# --- Page Configuration ---
st.set_page_config(
    page_title="Dataset Split Viewer",
    page_icon="üñºÔ∏è",
    layout="wide",
)


# --- Caching Function ---
@st.cache_data
def load_data(uploaded_file):
    """
    Loads data from the uploaded CSV file into a pandas DataFrame.
    """
    try:
        df = pd.read_csv(uploaded_file)
        return df
    except Exception as e:
        st.error(f"Error loading CSV file: {e}")
        return None


# --- Main Application ---
st.title("üñºÔ∏è Dataset Split Viewer")
st.markdown(
    "This tool helps you verify the output of the dataset splitting script. Simply upload a `train.csv`, `valid.csv`, or `test.csv` file to see the images and their associated prompts.")

# --- Sidebar for User Inputs ---
with st.sidebar:
    st.header("‚öôÔ∏è Setup")

    # 1. CSV file uploader
    uploaded_file = st.file_uploader(
        "Upload a dataset CSV file",
        type=["csv"],
        help="Select train.csv, valid.csv, or test.csv generated by the splitter script."
    )

# --- Main Content Area ---
if not uploaded_file:
    st.info("üëã Welcome! Please upload a CSV file using the panel on the left to begin.")
else:
    df = load_data(uploaded_file)

    if df is not None:
        # --- Column Validation ---
        required_columns = ["filepath", "prompt"]
        if not all(col in df.columns for col in required_columns):
            st.error("The uploaded CSV file is invalid. It must contain 'filepath' and 'prompt' columns.")
        else:
            st.success(f"Successfully loaded '{uploaded_file.name}' containing {len(df)} entries.")
            st.markdown("---")

            # --- Display Images and Prompts ---
            for index, row in df.iterrows():
                image_path_str = row["filepath"]
                prompt_text = row["prompt"]

                image_path = Path(image_path_str)

                # Create a two-column layout
                col1, col2 = st.columns([1, 2])  # Image column is 1/3, text is 2/3 of the width

                # --- Column 1: Display the Image ---
                with col1:
                    if image_path.is_file():
                        st.image(str(image_path), caption=image_path_str.split("\\")[-1], width=200)
                    else:
                        st.warning("Image not found!")
                        st.info(f"The file could not be found at the path specified in the CSV:")
                        st.code(image_path_str, language=None)

                # --- Column 2: Display the Prompt ---
                with col2:
                    st.text_area(
                        "Prompt",
                        value=prompt_text,
                        height=200,
                        key=f"prompt_{index}"
                    )

                st.markdown("---")  # Visual separator for each entry
